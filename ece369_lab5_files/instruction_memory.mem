34020000	//	main:		ori	$2, $zero, 0 ->	main:		ori	$2, $zero, 0
34030010	//			ori	$3, $zero, 16 ->			ori	$3, $zero, 16
34040410	//			ori	$4, $zero, 1040 ->			ori	$4, $zero, 1040
8c450000	//			lw	$5, 0($2) ->			lw	$5, 0($2)
8c460004	//			lw	$6, 4($2) ->			lw	$6, 4($2)
8c470008	//			lw	$7, 8($2) ->			lw	$7, 8($2)
8c48000c	//			lw	$8, 12($2) ->			lw	$8, 12($2)
00a74822	//			sub	$9, $5, $7 ->			sub	$9, $5, $7
00c85022	//			sub	$10, $6, $8 ->			sub	$10, $6, $8
00005820	//			add	$11, $zero, $zero ->			add	$11, $zero, $zero
00006020	//			add	$12, $zero, $zero ->			add	$12, $zero, $zero
00006820	//			add	$13, $zero, $zero ->			add	$13, $zero, $zero
00007020	//			add	$14, $zero, $zero ->			add	$14, $zero, $zero
20173e80	//			addi	$23, $zero, 16000 ->			addi	$23, $zero, 16000
0000c020	//			add	$24, $zero, $zero ->			add	$24, $zero, $zero
0000c820	//			add	$25, $zero, $zero ->			add	$25, $zero, $zero
0c000026	//			jal	vbsme ->			jal	vbsme
08000032	//			j	loop ->			j	loop
00000000	//	sad:		nop ->	sad:		nop
21ad0001	//	loop_i:		addi	$13, $13, 1 ->	loop_i:		addi	$13, $13, 1
016d7820	//	loop_j:		add	$15, $11, $13 ->	loop_j:		add	$15, $11, $13
018e8020	//			add	$16, $12, $14 ->			add	$16, $12, $14
71e68802	//			mul	$17, $15, $6 ->			mul	$17, $15, $6
02309020	//			add	$18, $17, $16 ->			add	$18, $17, $16
8e4f0000	//			lw	$15, 0($18) ->			lw	$15, 0($18)
21ef0004	//			addi	$15, $15, 4 ->			addi	$15, $15, 4
71a88002	//			mul	$16, $13, $8 ->			mul	$16, $13, $8
020e9020	//			add	$18, $16, $14 ->			add	$18, $16, $14
8e510000	//			lw	$17, 0($18) ->			lw	$17, 0($18)
22310004	//			addi	$17, $17, 4 ->			addi	$17, $17, 4
01f19822	//			sub	$19, $15, $17 ->			sub	$19, $15, $17
06610003	//			bgez	$19, positive ->			bgez	$19, positive
200fffff	//			addi	$15, $zero, -1 ->			addi	$15, $zero, -1
726f9802	//			mul	$19, $19, $15 ->			mul	$19, $19, $15
21ce0001	//	positive:	addi	$14, $14, 1 ->	positive:	addi	$14, $14, 1
15c8ffef	//			bne	$14, $8, loop_j ->			bne	$14, $8, loop_j
15a7ffed	//			bne	$13, $7, loop_i ->			bne	$13, $7, loop_i
03e00008	//			jr	$ra ->			jr	$ra
00000000	//	vbsme:		nop ->	vbsme:		nop
216b0001	//	loop_y:		addi	$11, $11, 1 ->	loop_y:		addi	$11, $11, 1
0c000012	//	loop_x:		jal	sad ->	loop_x:		jal	sad
0277782a	//			slt	$15, $19, $23 ->			slt	$15, $19, $23
11e00004	//			beq	$15, $zero, not_min ->			beq	$15, $zero, not_min
0013b820	//			add	$23, $zero, $19 ->			add	$23, $zero, $19
000bc020	//			add	$24, $zero, $11 ->			add	$24, $zero, $11
000cc820	//			add	$25, $zero, $12 ->			add	$25, $zero, $12
218c0001	//	not_min:	addi	$12, $12, 1 ->	not_min:	addi	$12, $12, 1
158afff7	//			bne	$12, $10, loop_x ->			bne	$12, $10, loop_x
1569fff5	//			bne	$11, $9, loop_y ->			bne	$11, $9, loop_y
03e00008	//			jr	$ra ->			jr	$ra
08000032	//	loop:		j	loop ->	loop:		j	loop
